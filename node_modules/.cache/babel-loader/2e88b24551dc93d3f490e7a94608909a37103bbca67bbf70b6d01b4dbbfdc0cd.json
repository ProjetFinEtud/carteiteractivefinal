{"ast":null,"code":"import React,{useState}from\"react\";import Typography from\"@mui/material/Typography\";import CssBaseline from\"@mui/material/CssBaseline\";import Container from\"@mui/material/Container\";import Paper from\"@mui/material/Paper\";import Grid from\"@mui/material/Grid\";import TextField from\"@mui/material/TextField\";import Button from\"@mui/material/Button\";import{Form}from\"react-bootstrap\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Update(){const navigate=useNavigate();const[formData,setFormData]=useState({username:\"\",password:\"\",newpassword:\"\",confirmpass:\"\"});const[errors,setErrors]=useState({username:\"\",password:\"\",newpassword:\"\",confirmpass:\"\"});const[validation,setValidation]=useState(\"\");const validateForm=()=>{const newErrors={...errors};if(!formData.username){console.log(formData.username);newErrors.username=\"Veuillez entrer votre nom d'utilisateur\";}else{newErrors.username=\"\";}if(!formData.password){newErrors.password=\"Veuillez entrer votre mot le mot de passe reçu\";}else{newErrors.password=\"\";}if(!formData.newpassword){newErrors.newpassword=\"Veuillez entrer votre nouveau mot le mot de passe\";}else{newErrors.newpassword=\"\";}if(!formData.confirmpass){newErrors.confirmpass=\"Veuillez confirmer votre mot de passe\";}else{newErrors.confirmpass=\"\";}setErrors(newErrors);// Le formulaire est valide s'il n'y a pas d'erreurs\nreturn Object.values(newErrors).every(error=>!error);};const handleFieldChange=(field,value)=>{//const sanitizedValue = value.trim();\nsetFormData({...formData,[field]:value});setErrors(prevData=>({...prevData,[field]:\"\"}));};const handleValidation=async()=>{// Ajoutez ici la logique de validation ou envoyez les données au serveur\nconst formIsValid=validateForm();console.log(formData);if(!formIsValid){console.log(\"Le formulaire n'est pas valide\");return;}else{const apiResponse=await fetch(\"/auth/updatepass\",{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)});if(!apiResponse.ok){// Si le statut n'est pas OK (200)\nif(apiResponse.status===400){console.error(\"Erreur de validation des données côté serveur\");}else if(apiResponse.status===401){console.error(\"Erreur d'authentification côté serveur\");}else{console.error(\"Erreur côté serveur:\",apiResponse.statusText);}return;}else{const data=await apiResponse.json();console.log(data);sessionStorage.setItem(\"accessToken\",data.token);setValidation(\"Votre mot de passe à été changer avec succès\");navigate(\"/connexion\");}}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Container,{component:\"main\",maxWidth:\"sm\",sx:{mb:4},children:/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{my:{xs:3,md:6},p:{xs:2,md:3}},children:[/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h4\",align:\"center\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Modifier votre mot de passe\"})}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-success\",children:validation}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:12,children:[/*#__PURE__*/_jsx(TextField,{id:\"username\",name:\"username\",label:\"username\",fullWidth:true,autoComplete:\"given-name\",value:formData.username,onChange:event=>handleFieldChange(\"username\",event.target.value)}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-danger\",children:errors.username})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:12,children:[/*#__PURE__*/_jsx(TextField,{id:\"password\",name:\"password\",label:\"password\",fullWidth:true,autoComplete:\"password\",type:\"password\",value:formData.password,onChange:event=>handleFieldChange(\"password\",event.target.value)}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-danger\",children:errors.password})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:12,children:[/*#__PURE__*/_jsx(TextField,{id:\"newpassword\",name:\"newpassword\",label:\"newpassword\",fullWidth:true,autoComplete:\"newpassword\",type:\"password\",value:formData.newpassword,onChange:event=>handleFieldChange(\"newpassword\",event.target.value)}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-danger\",children:errors.newpassword})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:12,children:[/*#__PURE__*/_jsx(TextField,{id:\"confirmpass\",name:\"confirmpass\",label:\"confirmpass\",type:\"password\",fullWidth:true,autoComplete:\"confirmpass\",value:formData.confirmpass,onChange:event=>handleFieldChange(\"confirmpass\",event.target.value)}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-danger\",children:errors.confirmpass})]})]}),/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleValidation,children:\"Valider\"})})]})})]});}","map":{"version":3,"names":["React","useState","Typography","CssBaseline","Container","Paper","Grid","TextField","Button","Form","useNavigate","jsx","_jsx","jsxs","_jsxs","Update","navigate","formData","setFormData","username","password","newpassword","confirmpass","errors","setErrors","validation","setValidation","validateForm","newErrors","console","log","Object","values","every","error","handleFieldChange","field","value","prevData","handleValidation","formIsValid","apiResponse","fetch","method","headers","body","JSON","stringify","ok","status","statusText","data","json","sessionStorage","setItem","token","Fragment","children","component","maxWidth","sx","mb","variant","my","xs","md","p","align","Text","className","container","spacing","item","sm","id","name","label","fullWidth","autoComplete","onChange","event","target","type","justifyContent","color","onClick"],"sources":["C:/Users/abdou/Documents/S9-S10/ProjetFinDetudes/Jalon3/v2/demo - Copie/server/client/src/Components/Utilisateurs/Update.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Update() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    newpassword: \"\",\r\n    confirmpass: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    newpassword: \"\",\r\n    confirmpass:\"\",\r\n  });\r\n  const [validation, setValidation] = useState(\"\")\r\n\r\n  const validateForm = () => {\r\n    const newErrors = { ...errors };\r\n    if (!formData.username) {\r\n      console.log(formData.username);\r\n      newErrors.username = \"Veuillez entrer votre nom d'utilisateur\";\r\n    } else {\r\n      newErrors.username = \"\";\r\n    }\r\n\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = \"Veuillez entrer votre mot le mot de passe reçu\";\r\n    } else {\r\n      newErrors.password = \"\";\r\n    }\r\n    if (!formData.newpassword) {\r\n      newErrors.newpassword = \"Veuillez entrer votre nouveau mot le mot de passe\";\r\n    } else {\r\n      newErrors.newpassword = \"\";\r\n    }\r\n    \r\n    if (!formData.confirmpass) {\r\n      newErrors.confirmpass = \"Veuillez confirmer votre mot de passe\";\r\n    } else {\r\n      newErrors.confirmpass = \"\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    // Le formulaire est valide s'il n'y a pas d'erreurs\r\n    return Object.values(newErrors).every((error) => !error);\r\n  };\r\n\r\n  const handleFieldChange = (field, value) => {\r\n    //const sanitizedValue = value.trim();\r\n    setFormData({\r\n      ...formData,\r\n      [field]: value,\r\n    });\r\n    setErrors((prevData) => ({ ...prevData, [field]: \"\" }));\r\n  };\r\n\r\n  const handleValidation = async () => {\r\n    // Ajoutez ici la logique de validation ou envoyez les données au serveur\r\n    const formIsValid = validateForm();\r\n    console.log(formData)\r\n    if (!formIsValid) {\r\n      console.log(\"Le formulaire n'est pas valide\");\r\n      return;\r\n    } else {\r\n      const apiResponse = await fetch(\"/auth/updatepass\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!apiResponse.ok) {\r\n        // Si le statut n'est pas OK (200)\r\n        if (apiResponse.status === 400) {\r\n          console.error(\"Erreur de validation des données côté serveur\");\r\n        } else if (apiResponse.status === 401) {\r\n          console.error(\"Erreur d'authentification côté serveur\");\r\n        } else {\r\n          console.error(\"Erreur côté serveur:\", apiResponse.statusText);\r\n        }\r\n        return;\r\n      } else {\r\n        const data = await apiResponse.json();\r\n        console.log(data)\r\n        sessionStorage.setItem(\"accessToken\", data.token);\r\n        setValidation(\"Votre mot de passe à été changer avec succès\")\r\n        navigate(\"/connexion\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\r\n        <Paper\r\n          variant=\"outlined\"\r\n          sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            <em>Modifier votre mot de passe</em>\r\n          </Typography>\r\n          <Form.Text className=\"text-success\">{validation}</Form.Text>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                id=\"username\"\r\n                name=\"username\"\r\n                label=\"username\"\r\n                fullWidth\r\n                autoComplete=\"given-name\"\r\n                value={formData.username}\r\n                onChange={(event) =>\r\n                  handleFieldChange(\"username\", event.target.value)\r\n                }\r\n              />\r\n              <Form.Text className=\"text-danger\">{errors.username}</Form.Text>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"password\"\r\n                fullWidth\r\n                autoComplete=\"password\"\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={(event) =>\r\n                  handleFieldChange(\"password\", event.target.value)\r\n                }\r\n              />\r\n              <Form.Text className=\"text-danger\">{errors.password}</Form.Text>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                id=\"newpassword\"\r\n                name=\"newpassword\"\r\n                label=\"newpassword\"\r\n                fullWidth\r\n                autoComplete=\"newpassword\"\r\n                type=\"password\"\r\n                value={formData.newpassword}\r\n                onChange={(event) =>\r\n                  handleFieldChange(\"newpassword\", event.target.value)\r\n                }\r\n              />\r\n              <Form.Text className=\"text-danger\">{errors.newpassword}</Form.Text>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                id=\"confirmpass\"\r\n                name=\"confirmpass\"\r\n                label=\"confirmpass\"\r\n                type=\"password\"\r\n                fullWidth\r\n                autoComplete=\"confirmpass\"\r\n                value={formData.confirmpass}\r\n                onChange={(event) =>\r\n                  handleFieldChange(\"confirmpass\", event.target.value)\r\n                }\r\n              />\r\n              <Form.Text className=\"text-danger\">{errors.confirmpass}</Form.Text>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleValidation}\r\n            >\r\n              Valider\r\n            </Button>\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}