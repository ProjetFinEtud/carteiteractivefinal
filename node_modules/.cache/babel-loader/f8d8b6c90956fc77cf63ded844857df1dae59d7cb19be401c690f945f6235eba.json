{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import Typography from\"@mui/material/Typography\";import Grid from\"@mui/material/Grid\";import\"leaflet/dist/leaflet.css\";import InputLabel from\"@mui/material/InputLabel\";import{MapContainer,TileLayer,Marker,Popup}from\"react-leaflet\";import{Icon}from\"leaflet\";import{useMapEvents}from\"react-leaflet\";import{Form}from\"react-bootstrap\";import{FullscreenControl}from\"react-leaflet-fullscreen\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Localisation(_ref){let{onFieldChangeLon,onFieldChangeShow,onFieldChangeLat,formData,errors}=_ref;const[markerPosition,setMarkerPosition]=useState(null);const[locationInfo,setLocationInfo]=useState(\"\");const reverseGeoCoding=useCallback(async(lat,lng)=>{const GEOCODE_URL=\"https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&langCode=EN&location=\".concat(lng,\",\").concat(lat);try{const response=await fetch(GEOCODE_URL);const data=await response.json();const{address}=data;const city=address.City;const country=address.CountryCode;setLocationInfo(\"\".concat(city,\", \").concat(country));onFieldChangeShow(\"localisation\",city+\" \"+country);}catch(error){console.error(\"Error during reverse geocoding:\",error);}},[onFieldChangeShow]);useEffect(()=>{if(formData.laltitude&&formData.longitude){const lat=parseFloat(formData.laltitude);const lng=parseFloat(formData.longitude);setMarkerPosition({lat,lng});const fetchData=async()=>{try{await reverseGeoCoding();}catch(error){console.error('Error fetching data:',error.message);}};fetchData();}},[formData,reverseGeoCoding]);function AddMarkerToClick(){useMapEvents({click:e=>{const{lat,lng}=e.latlng;setMarkerPosition({lat,lng});onFieldChangeLat(\"laltitude\",lat);onFieldChangeLon(\"longitude\",lng);reverseGeoCoding(lat,lng);}});return null;}const customIcon=new Icon({iconUrl:require(\"../../../../img/placeholder.png\"),iconSize:[30,30]});return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Localisation\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"location-label\",children:\"Marquez votre localisation sur la carte\"}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-danger\",children:errors.localisation}),/*#__PURE__*/_jsx(\"div\",{style:{height:\"200px\"},children:/*#__PURE__*/_jsxs(MapContainer,{center:[48.860197534643966,2.3469543457031254],zoom:13,style:{height:\"100%\",width:\"100%\"},children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/_jsx(AddMarkerToClick,{}),markerPosition&&/*#__PURE__*/_jsx(Marker,{position:markerPosition,icon:customIcon,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsx(\"div\",{children:locationInfo})})}),/*#__PURE__*/_jsx(FullscreenControl,{position:\"topright\"})]})})]})})]});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","Typography","Grid","InputLabel","MapContainer","TileLayer","Marker","Popup","Icon","useMapEvents","Form","FullscreenControl","jsx","_jsx","jsxs","_jsxs","Localisation","_ref","onFieldChangeLon","onFieldChangeShow","onFieldChangeLat","formData","errors","markerPosition","setMarkerPosition","locationInfo","setLocationInfo","reverseGeoCoding","lat","lng","GEOCODE_URL","concat","response","fetch","data","json","address","city","City","country","CountryCode","error","console","laltitude","longitude","parseFloat","fetchData","message","AddMarkerToClick","click","e","latlng","customIcon","iconUrl","require","iconSize","Fragment","children","variant","gutterBottom","container","spacing","item","xs","id","Text","className","localisation","style","height","center","zoom","width","url","attribution","position","icon"],"sources":["C:/Users/abdou/Documents/S9-S10/ProjetFinDetudes/Jalon3/v2/demo - Copie/server/client/src/Components/Auth/Register/Exstudent/Localisation.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport \"leaflet/dist/leaflet.css\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport {  Icon } from \"leaflet\";\nimport { useMapEvents } from \"react-leaflet\";\nimport { Form } from \"react-bootstrap\";\nimport { FullscreenControl } from \"react-leaflet-fullscreen\";\n\nexport default function Localisation({ onFieldChangeLon , onFieldChangeShow, onFieldChangeLat, formData, errors}) {\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [locationInfo, setLocationInfo] = useState(\"\");\n\n  const reverseGeoCoding = useCallback(async (lat, lng) => {\n    const GEOCODE_URL = `https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&langCode=EN&location=${lng},${lat}`;\n    try {\n      const response = await fetch(GEOCODE_URL);\n      const data = await response.json();\n      const { address } = data;\n      const city = address.City;\n      const country = address.CountryCode;\n      setLocationInfo(`${city}, ${country}`);\n      onFieldChangeShow(\"localisation\", city + \" \" + country)\n    } catch (error) {\n      console.error(\"Error during reverse geocoding:\", error);\n    }\n  }, [onFieldChangeShow]);\n\n  useEffect(() => {\n    if (formData.laltitude && formData.longitude) {\n      const lat = parseFloat(formData.laltitude);\n      const lng = parseFloat(formData.longitude);\n      setMarkerPosition({ lat, lng });\n      const fetchData = async () => {\n        try {\n          await reverseGeoCoding();\n        } catch (error) {\n          console.error('Error fetching data:', error.message);\n        }\n      };\n      fetchData();\n    } \n  }, [formData, reverseGeoCoding]);\n\n  function AddMarkerToClick() {\n    useMapEvents({\n      click: (e) => {\n        const { lat, lng } = e.latlng;\n        setMarkerPosition({ lat, lng });\n        onFieldChangeLat(\"laltitude\", lat);\n        onFieldChangeLon(\"longitude\", lng); \n        reverseGeoCoding(lat, lng);\n      },\n    });\n    return null;\n  }\n\n  const customIcon = new Icon({\n    iconUrl :require(\"../../../../img/placeholder.png\"),\n    iconSize: [30, 30]\n  });\n\n\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Localisation\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <InputLabel id=\"location-label\">Marquez votre localisation sur la carte</InputLabel>\n          <Form.Text className=\"text-danger\">{errors.localisation}</Form.Text>\n          <div style={{ height: \"200px\" }}>\n            <MapContainer\n              center={[48.860197534643966, 2.3469543457031254]}\n              zoom={13}\n              style={{ height: \"100%\", width: \"100%\" }}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              <AddMarkerToClick />\n              {markerPosition && (\n                <Marker position={markerPosition} icon={customIcon}>\n                  <Popup>\n                    <div>{locationInfo}</div>\n                    {/* <div>Latitude: {markerPosition.lat}, Longitude: {markerPosition.lng}</div> */}\n                  </Popup>\n                </Marker>\n              )}\n              <FullscreenControl position=\"topright\" />\n            </MapContainer>\n          </div>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}